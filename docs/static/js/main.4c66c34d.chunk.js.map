{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","console","log","useFechGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iKAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,SACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDAEwBC,UAAUH,GAFlC,8DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVlB,kBAabL,GAba,4CAAH,sDCCNQ,G,KAAc,SAAC,GAAqB,EAApBL,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACtC,OACE,sBAAKI,UAAU,2DAAf,UACE,qBAAKC,IAAML,EAAKM,IAAKP,IACrB,4BAAIA,SCFGQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAd,SAACA,GAAc,IAAD,EACbd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAU,WACRzB,EAAOC,GACJyB,MAAK,SAAAX,GACJS,EAAS,CACPhB,KAAMO,EACNO,SAAQ,SAGb,CAACrB,IAEJ0B,QAAQC,IAAIL,GACLA,EDfwBM,CAAY5B,GAA/Bc,EAF2B,EAEhCP,KAAac,EAFmB,EAEnBA,QAEpB,OACE,qCACE,6BAAKrB,IAEHqB,GAAW,wCAEb,qBAAKJ,UAAU,WAAf,SACGH,EAAOL,KAAI,SAACoB,GACX,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAMlB,aEZ5BmB,EAAe,WAAO,IAAD,EACI5C,mBAAS,CAC3C,YAF8B,mBACzBQ,EADyB,KACbT,EADa,KAUhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWe,KAAK,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEEA,SAAWA,GADLA,YCdlB+B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,U","file":"static/js/main.4c66c34d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    <input \r\n        type=\"text\" \r\n        value={inputValue} \r\n        onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGif = async ( category) => {\r\n  const URL =\r\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=LLcsfFYpM7fRcDNI89DMWGetu8BjhfeZ`;\r\n  const resp = await fetch(URL);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};","import '../index.css'\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn animate__delay-1s'>\r\n      <img src= {url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import { useFechGifs } from \"../hooks/useFechGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFechGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {\r\n        loading && <p>Loading</p>\r\n      }\r\n      <div className=\"cardGrid\">\r\n        {images.map((image) => {\r\n          return <GifGridItem key={image.id} {...image} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nexport const useFechGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category)\r\n      .then(images => {\r\n        setState({\r\n          data: images,\r\n          loading:false\r\n        })\r\n      })\r\n  }, [category]);\r\n\r\n  console.log(state)\r\n  return state; // {data:[], loading: true}\r\n};\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid'\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\r\n    \"Pokemon\"\r\n  ]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, \"Kimetsu No Yaiba\"]);\r\n  //   // setCategories( estadoAnterior => [...estadoAnterior, 'nuevoEstado'])\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map( category => \r\n          <GifGrid \r\n            key={ category }\r\n            category={ category } />\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}